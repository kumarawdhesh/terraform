    1  ls
    2  java -version 
    3  mvn --version 
    4  exit
    5  docker version 
    6  exit
    7  kubectl get nodes 
    8  kubectl get pods 
    9  ls
   10  git clone https://github.com/amitvashisttech/devops-cgi-11May2020.git
   11  ls
   12  cd devops-cgi-11May2020/
   13  ls
   14  cd 02-Docker/
   15  ls
   16  cd Docker
   17  cd Dockerfiles/
   18  ls
   19  cd python-webapp/
   20  ls
   21  cat Dockerfile 
   22  ls
   23  cd code/
   24  ls
   25  vim app.py 
   26  ls
   27  cd ..
   28  ls
   29  vim Dockerfile 
   30  ls
   31  docker build -t amitvashist7/my-python-webapp:1 . 
   32  docker images 
   33  docker run -d -P amitvashist7/my-python-webapp:1
   34  docker ps 
   35  docker ps -ql
   36  ls
   37  cat code/app.py 
   38  ls
   39  docker login 
   40  ls
   41  docker images
   42  docker push amitvashist7/my-python-webapp:1
   43  ls
   44  cd ..
   45  l
   46  cd 
   47  ls
   48  cd - 
   49  ls
   50  cd python-webapp/
   51  ls
   52  vim code/app.py 
   53  docker build -t amitvashist7/my-python-webapp:2 . 
   54  docker push amitvashist7/my-python-webapp:2
   55  ls
   56  cd ..
   57  ls
   58  cd ..
   59  ls
   60  cd 
   61  ls
   62  cd k8s-terraform-cgi-25May2020/
   63  ls
   64  git pull 
   65  ls
   66  cd 03-K8s/
   67  ls
   68  cd 01-Setup/
   69  ls
   70  vim install-kubernetes.sh 
   71  ls
   72  cat install-kubernetes.sh 
   73  ls
   74  cd ..
   75  cd - 
   76  ls
   77  vim README.md 
   78  ls
   79  cd ..
   80  ls
   81  git add .; git commit -m "Python-webapp"; git push 
   82  ls
   83  kubectl get deployments
   84  kubectl delete deployments pythonwebapp-deployment
   85  ls
   86  kubectl get deployments
   87  kubectl scale --replicas=5 deployments
   88  kubectl scale --replicas=5 deployments helloworld-deployment
   89  kubectl get deployments
   90  kubectl rollout history  deployment helloworld-deployment
   91  kubectl get svc 
   92  kubectl delete svc pythonwebapp-deployment
   93  ls
   94  kubectl get svc 
   95  curl worker1:31702
   96  curl worker2:31702
   97  kubectl rollout history  deployment helloworld-deployment
   98  kubectl rollout undo  deployment helloworld-deployment
   99  kubectl rollout status deployment helloworld-deployment
  100  kubectl rollout history  deployment helloworld-deployment
  101  curl worker2:31702
  102  kubectl rollout undo  deployment helloworld-deployment
  103  kubectl rollout status deployment helloworld-deployment
  104  kubectl rollout history  deployment helloworld-deployment
  105  curl worker2:31702
  106  kubectl rollout undo  deployment helloworld-deployment --to-revision=1 --record
  107  kubectl rollout undo  deployment helloworld-deployment --to-revision=1 
  108  kubectl rollout status deployment helloworld-deployment
  109  kubectl rollout history  deployment helloworld-deployment
  110  curl worker2:31702
  111  kubectl rollout history  deployment helloworld-deployment --revsion=7
  112  kubectl rollout history  deployment helloworld-deployment --revision=7
  113  ls
  114  kubectl delete -f 04-Deployment/helloworld.yml 
  115  kubectl get svc 
  116  kubectl delete svc helloworld-deployment
  117  ls
  118  cd ..
  119  ls
  120  git pull
  121  ls
  122  cd 03-K8s/05-App-with-Service/
  123  ls
  124  cat helloworld.yml 
  125  kubectl create -f helloworld.yml 
  126  kubectl get pods 
  127  kubectl get deploy 
  128  ls
  129  kubectl get pods 
  130  kubectl expose pod nodehelloworld --type=NodePort
  131  ls
  132  cat helloworld-service.yml 
  133  ls
  134  cat helloworld-nodeport-service.yml 
  135  ls
  136  cat helloworld-tomcat.yaml 
  137  ls
  138  kubectl get svc 
  139  kubectl get pods -o wide 
  140  curl worker2:30643
  141  kubectl delete svc nodehelloworld
  142  ls
  143  vim helloworld-nodeport-service.yml 
  144  ls
  145  kubectl get pods 
  146  kubectl create -f helloworld-nodeport-service.yml 
  147  kubectl get svc 
  148  curl worker2:31001
  149  vim helloworld-nodeport-service.yml 
  150  ls
  151  kubectl get svc 
  152  kubectl describe svc helloworld-service
  153  kubectl get pods -o wide 
  154  kubectl describe pods nodehelloworld
  155  ls
  156  cat helloworld-tomcat.yaml 
  157  ls
  158  cat ../04-Deployment/pythonwebapp.yml 
  159  ls
  160  cp -rf helloworld-tomcat.yaml helloworld-python-webapp.yaml
  161  ls
  162  vim helloworld-python-webapp.yaml 
  163  ls
  164  vim helloworld-python-webapp.yaml 
  165  vim helloworld-tomcat.yaml 
  166  ls
  167  kubectl create -f helloworld-python-webapp.yaml 
  168  kubectl create -f helloworld-tomcat.yaml 
  169  kubectl get pods 
  170  kubectl get svc 
  171  kubectl describe svc helloworld-service
  172  kubectl get pods -o wide 
  173  kubectl get svc 
  174  curl http://172.31.0.102:31001/
  175  curl http://172.31.0.102:31001/info
  176  curl http://172.31.0.102:31001/amit
  177  curl http://172.31.0.102:31001/
  178  kubectl get pods 
  179  kubectl get svc 
  180  curl http://172.31.0.102:31001/
  181  ls
  182  kubectl delete -f helloworld.yml 
  183  cd ..
  184  kubectl delete -f 05-App-with-Service/
  185  kubectl get svc 
  186  kubectl get pods 
  187  ls
  188  cd ..
  189  ls
  190  git pull
  191  cd ..
  192  ls
  193  cd k8s-terraform-cgi-25May2020/
  194  git config --list 
  195  ls
  196  cd ..
  197  ls
  198  rm -rf * 
  199  ls
  200  git clone https://github.com/amitvashisttech/k8s-terraform-cgi-25May2020.git
  201  ls
  202  cd k8s-terraform-cgi-25May2020/
  203  ls
  204  cd 03-K8s/
  205  ls
  206  cd 06-Labels/
  207  ls
  208  kubectl get nodes 
  209  kubectl get nodes --show-labels
  210  kubectl get pods 
  211  kubectl get svc 
  212  kubectl get nodes --show-labels
  213  ls
  214  vim helloworld-nodeselector.yml 
  215  ls
  216  cat helloworld-nodeselector_1.yml 
  217  ls
  218  mv helloworld-nodeselector_1.yml helloworld-nodeselector-onelabel.yaml
  219  ls
  220  mv helloworld-nodeselector.yml helloworld-nodeselector-twolabel.yaml 
  221  ls
  222  vim helloworld-nodeselector-onelabel.yaml n
  223  ls
  224  kubectl create -f helloworld-nodeselector-onelabel.yaml 
  225  kubectl get pods 
  226  kubectl describe pod helloworld-deployment-9dbf955f4-4l6t2
  227  ls
  228  cat helloworld-nodeselector-onelabel.yaml 
  229  kubectl get nodes --show-labels
  230  kubectl label nodes worker2 hardware=virtual
  231  kubectl get nodes --show-labels
  232  kubectl get pods 
  233  kubectl get pods -o wide
  234  kubectl scale --replicas=5 deploy helloworld-deployment
  235  kubectl get pods -o wide
  236  kubectl label nodes worker1 hardware=virtual
  237  kubectl get pods -o wide
  238  kubectl scale --replicas=7 deploy helloworld-deployment
  239  kubectl get pods -o wide
  240  kubectl scale --replicas=3 deploy helloworld-deployment
  241  kubectl get pods -o wide
  242  kubectl delete -f helloworld-nodeselector-onelabel.yaml 
  243  kubectl get pods -o wide
  244  ls
  245  cat helloworld-nodeselector-twolabel.yaml 
  246  kubectl create -f helloworld-nodeselector-twolabel.yaml 
  247  kubectl get pods 
  248  kubectl label nodes worker1 env=prod
  249  kubectl get pods 
  250  kubectl get pods -o wide
  251  kubectl label nodes worker2 env=prod
  252  kubectl scale --replicas=6 deploy helloworld-deployment
  253  kubectl scale --replicas=6 deploy helloworld-deployment-2
  254  kubectl get pods -o wide
  255  kubectl get node --show-labels
  256  kubectl label nodes worker2 env-
  257  kubectl label nodes worker2 hardware-
  258  kubectl get node --show-labels
  259  kubectl get pods -o wide
  260  kubectl scale --replicas=10 deploy helloworld-deployment-2
  261  kubectl get pods -o wide
  262  kubectl label nodes worker1 hardware-
  263  kubectl label nodes worker1 env-
  264  history 
  265  ls
  266  cd ..
  267  ls
  268  history > Day4_history.txt
  269  cd ..
  270  git add .; git commit -m "Python-webapp"; git push 
  271  git 
  272  git pull
  273  ls
  274  cd 03-K8s/
  275  ls
  276  cd 07-HealthChecks/
  277  ls
  278  cat helloworld-healthcheck-http.yml 
  279  kubectl create -f helloworld-healthcheck-http.yml 
  280  kubectl get pods 
  281  kubectl delete deploy helloworld-deployment-2
  282  kubectl get pods 
  283  kubectl describe pod helloworld-deployment-7c6f554f6d-4gwq9
  284  ls
  285  kubectl get pods 
  286  kubectl expose deploy helloworld-deployment --type=NodePort
  287  kubectl get svc 
  288  curl worker1:32273
  289  curl worker1:32273/
  290  curl worker1:32273/amitvashist
  291  kubectl get pods 
  292  kubectl edit deploy helloworld-deployment 
  293  kubectl get pods
  294  kubectl describe pod helloworld-deployment-64cbd7875b-429pk
  295  kubectl get pods
  296  kubectl describe pod helloworld-deployment-64cbd7875b-429pk
  297  kubectl edit deploy helloworld-deployment 
  298  ls
  299  kubectl apply -f helloworld-healthcheck-http.yml 
  300  kubectl get pods
  301  kubectl describe pod helloworld-deployment-7c6f554f6d-l56ld
  302  ls
  303  vim helloworld-healthcheck-exec.yml 
  304  ls
  305  kubectl apply -f helloworld-healthcheck-exec.yml 
  306  kubectl get pods 
  307  kubectl describe pod liveness-exec
  308  kubectl get pods 
  309  kubectl delete -f helloworld-healthcheck-* 
  310  kubectl delete -f helloworld-healthcheck-cd ..
  311  ls
  312  cd ..
  313  ls
  314  kubectl delete -f 07-HealthChecks/
  315  ls
  316  cd ..
  317  git pull
  318  ls
  319  cd 03-K8s/
  320  ls
  321  cd 08-Secrets/
  322  ls
  323  echo -n "amitvashist" > ./username.txt
  324  echo -n "Password@1234!" > ./password.txt
  325  cat username.txt 
  326  cat password.txt 
  327  vim username.txt 
  328  cat username.txt 
  329  vim username.txt 
  330  cat username.txt 
  331  kubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt 
  332  kubectl get secrets
  333  kubectl describe secrets db-user-pass
  334  ls
  335  cat helloworld-secrets.yml 
  336  cat helloworld-secrets-volumes.yml 
  337  ls
  338  echo -n "Password@1234!" |base64 
  339  echo -n "amitvashist7" |base64 
  340  vi helloworld-secrets.yml 
  341  echo -n "amitvashist7" |base64 
  342  vi helloworld-secrets.yml 
  343  echo -n "Password@1234!" |base64 
  344  vi helloworld-secrets.yml 
  345  ls
  346  kubectl create -f helloworld-secrets.yml 
  347  kubectl get secrets 
  348  ls
  349  vim helloworld-secrets-volumes.yml 
  350  ls
  351  kubectl create -f helloworld-secrets-volumes.yml 
  352  kubectl get pods 
  353  kubectl describe pod helloworld-deployment-7c4677c78f-7dz5t
  354  kubectl get pods 
  355  kubectl exec -it helloworld-deployment-7c4677c78f-7dz5t -- /bin/sh
  356  ls
  357  rm -rf password.txt username.txt 
  358  ls
  359  kubectl get api-resources
  360  kubectl get api-resource
  361  kubectl get api-versions
  362  kubectl  api-versions
  363  kubectl  api-resources
  364  cat /root/.kube/config 
  365  ls
  366  cd ..
  367  ls
  368  kubectl create -f 09-Wordpress/wordpress-secrets.yml 
  369  kubectl create -f 09-Wordpress/
  370  ls
  371  cd 09-Wordpress/
  372  ls
  373  vim wordpress-single-deployment-no-volumes.yml 
  374  kubectl get pods 
  375  kubectl describe pod wordpress-deployment-6958b7b48f-bkdht
  376  kubectl get svc 
  377  kubectl get pods -o wide 
  378  kubectl exec -it wordpress-deployment-6958b7b48f-bkdht -c mysql -- mysql -u root -p 
  379  ls
  380  cd ..
  381  ls
  382  history > Day4_history.txt 
